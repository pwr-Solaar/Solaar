name: tests

on: [push, pull_request]

jobs:
  ubuntu-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8, 3.12]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Ubuntu dependencies
      run: |
        make install_apt

    - name: Install Python dependencies
      run: |
        make install_pip PIP_ARGS='.["test"]'

    - name: Run tests on Ubuntu
      run: |
        make test

    - name: Upload coverage to Codecov
      if: github.ref == 'refs/heads/master'
      uses: codecov/codecov-action@v4.5.0
      with:
        directory: ./coverage/reports/
        env_vars: OS, PYTHON
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}

  macos-tests:
    runs-on: macos-latest

    strategy:
      matrix:
        python-version: [3.8, 3.12]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up macOS dependencies
      run: |
        make install_brew
    - name: Install Python dependencies
      run: |
        make install_pip PIP_ARGS='.["test"]'
    - name: Run tests on macOS
      run: |
        export DYLD_LIBRARY_PATH=$(brew --prefix hidapi)/lib:$DYLD_LIBRARY_PATH && pytest --cov --cov-report=xml
    - name: Upload coverage to Codecov
      if: github.ref == 'refs/heads/master'
      uses: codecov/codecov-action@v4.5.0
      with:
        directory: ./coverage/reports/
        env_vars: OS, PYTHON
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
